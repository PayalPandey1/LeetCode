class Solution {
    
    void dfs(vector<vector<int>>& rooms, vector<bool>& visited,  int source)
    {
        if(visited[source] == true)
            return ;
         visited[source] = true;
        cout << "source" << "  " << source << endl ;
        vector<int> neighbors = rooms[source];
        for(int i=0; i < neighbors.size(); i++)
        {
            dfs(rooms, visited, neighbors[i]) ;
        }
       
    }
    
    
public:
    bool canVisitAllRooms(vector<vector<int>>& rooms) {
        vector<bool>visited(rooms.size(), false);
        dfs(rooms, visited, 0);
        for(int i=0; i < rooms.size(); i++)
        {
            if(visited[i] == false)
                return false ;
        }
        return true ;
    }
};
