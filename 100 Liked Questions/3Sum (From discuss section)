// NOT MY CODE:

class Solution {
public:
    vector<vector<int>> threeSum(vector<int>& nums) {
        vector<vector<int>> ret;
        if (nums.size() < 3)
            return ret;
        sort(nums.begin(), nums.end());
        int n = nums.size();
        for (int i = 0; i < n - 2; i ++){
            if (nums[i] > 0) break;
            if (i > 0 && nums[i] == nums[i - 1]) continue; // the same one has been seen before, so we can skip it
            int left = i + 1, right = n - 1;
            while (left < right){ // O(n)
                int sum = nums[i] + nums[left] + nums[right];
                if (sum < 0){ // let sum be bigger to be equal to zero
                    left ++;
                }
                else if (sum > 0){ // let sum be smaller to be equral to zero
                    right --;
                }
                else {
                    ret.push_back({nums[i], nums[left], nums[right]});
                    int last_left = nums[left], last_right = nums[right];
                    while (left < right && nums[left] == last_left) left ++; // skip these same elements
                    while (left < right && nums[right] == last_right) right --; // skip these same elements                    
                }
            }
            
        }
        return ret;
    }
};
