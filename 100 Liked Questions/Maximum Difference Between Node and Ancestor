/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    int max_diff ;
    void find_diff(TreeNode* root, int mx, int mn)
    {
        if(root == NULL){return;}
        if(root->val < mn){ mn = root->val ;}
        if(root->val > mx){mx = root->val;}
        if(abs(root->val - mx) > max_diff )
            max_diff = abs(root->val - mx) ;
        else if(abs(root->val - mn) > max_diff)
            max_diff = abs(root->val - mn) ;
        find_diff(root->left, mx, mn);
        find_diff(root->right, mx, mn);
        
    }
    int maxAncestorDiff(TreeNode* root) {
        if(root == NULL){return 0;}
        max_diff = 0;
        find_diff(root, -1, 100001);
        return max_diff ;
    }
};
